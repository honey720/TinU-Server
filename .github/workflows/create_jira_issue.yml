name: Create Jira issue
on:
  issues:
    types:
      - opened
jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/feature.yml

      - name: Log Issue Parser
        run: |
          echo '${{ steps.issue-parser.outputs.jsonString }}'
          echo "Branch Name : ${{ steps.issue-parser.outputs.issueparser_branch }}"
          echo "Start date : ${{ steps.issue-parser.outputs.issueparser_start_date }}"
          echo "Due date : ${{ steps.issue-parser.outputs.issueparser_due_date }}"
          echo "checkbox : ${{ steps.issue-parser.outputs.issueparser_is_only_branch }}"
          echo " ${{ steps.issue-parser.outputs}}"

      - name: Convert markdown to Jira Syntax
        if: ${{ steps.issue-parser.outputs.issueparser_is_only_branch != '브랜치만 생성할래요' }}
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira
          
      - name: Create Issue
        if: ${{ steps.issue-parser.outputs.issueparser_is_only_branch != '브랜치만 생성할래요' }}
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: TINU
          issuetype: SERVER
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: '{"parent": { "key": "TINU-51" }, "customfield_10015": "${{ steps.issue-parser.outputs.issueparser_start_date }}", "duedate": "${{ steps.issue-parser.outputs.issueparser_due_date }}"}'

      - name: Log created issue
        if: ${{ steps.issue-parser.outputs.issueparser_is_only_branch != '브랜치만 생성할래요' }}
        run: echo "Jira Issue ${{ steps.issue-parser.outputs.parentKey }}/${{ steps.create.outputs.issue }} was created"

      - name: Checkout develop code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Create branch with Ticket number
        run: |
          BRANCH_NAME="${{ steps.create.outputs.issue }}/${{ steps.issue-parser.outputs.issueparser_branch }}"
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ steps.create.outputs.issue }} ${{ github.event.issue.title }}"
